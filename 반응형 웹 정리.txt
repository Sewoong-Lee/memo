Flex grid, Flex box
px % v*

미디어 쿼리를 이용하여 섹션을 유동적으로 변경
@media screen and(max-width: 780px){ //사이즈가 780px 아래가 되면 아래처럼 변경해라
	.container{
		width: 50%;
	}
}

mdn웹사이트에서 확인 가능

Absolute 절대걱인값 (cm, px 등등)
Relative 상대적인값 (%, em 등)


html의 기본 폰트사이즈는 16px이다


em - 폰트사이즈의 단위 
<div class="parent">
	parent
	<div class="child">child</div>
</div>

.parent {
	font-size: 8em; // 기본 브라우저 폰트사이즈은 16px의 8배
}

.child {
	font-size: 0.5em; //부모의 폰트사이즈에 0.5를 곱한 사이즈
}

=> 퍼센트로 800, 50 으로 바꿔도 동일하다.

% - 부묘 요소의 상대적으로 크기 계산 (em과 비슷)



ex - 폰트패밀리에 따라서 높이 변겅
eh - 폰트패밀리에 따라서 너비 변겅


rem - 루트에 지정된 폰트사이즈(기본 html의 16px)를 기준으로 사이즈 변경

lh - line height 과 관련된 유닛 (브라우저 지원 X)


vw - 브라우저 뷰의 쓸 공간 정의 (ex) 50vw 면 뷰의 50%만 사용) (부모와 상관x)
vh - 이하동문

------------------------------------------------------------
부모 단위로 변화해야 한다면 em, %
브라우저 자체에 대하여 반응해야 한다면 rem, v*

요소의 너비와 높이에 따라 사이즈가 반응해야 한다면 %, v*
폰트 사이즈에 따라서 사이즈가 변경되야 한다면 em, rem

rem
사이즈가 어디서든 일정하게 고정되어야 한다면 
많이 사용하게 되더라도 한번에 계산 가능
더 선호
고정적인 패딩 사이즈를 유지해야 한다면 rem을 이용하여 패딩을 줌
(padding: 0.5em 0.5rem; 으로 위아래는 em, 양 옆은 rem으로 고정값으로 줌)
폰트사이즈에 주로 사용

em
박스 안에서 작용해야 한다면 
많이 사용하면 폰트 사이즈에 대한 즉각적인 계산이 어렵다.
div도 폰트사이즈와 같이 패딩을 주어 사이즈가 같이 변경되도록 만든다.
폰트 사이즈에 따른 변경이 일어나는 패딩 등에 주로 사용
----------------------------------------------------------------
pxtoem.com 사이트에서 픽셀을 em으로 계산 해주는 사이트


@media screen and(max-width: 780px){ //사이즈가 780px 아래가 되면 아래처럼 변경해라
	.component{
		font-size: 1.5rem;
	}
}

미디어쿼리의 맥스값도 rem을 사용하는게 좋다
flex-direction: colum; 을 사용하여 아래로 내려가게끔